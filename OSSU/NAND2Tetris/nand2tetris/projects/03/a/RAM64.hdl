// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[0..2],a=ram8a,b=ram8b,c=ram8c,d=ram8d,e=ram8e,f=ram8f,g=ram8g,h=ram8h);
    RAM8(in=in,load=ram8a,address=address[3..5],out=ram8outa);
    RAM8(in=in,load=ram8b,address=address[3..5],out=ram8outb);
    RAM8(in=in,load=ram8c,address=address[3..5],out=ram8outc);
    RAM8(in=in,load=ram8d,address=address[3..5],out=ram8outd);
    RAM8(in=in,load=ram8e,address=address[3..5],out=ram8oute);
    RAM8(in=in,load=ram8f,address=address[3..5],out=ram8outf);
    RAM8(in=in,load=ram8g,address=address[3..5],out=ram8outg);
    RAM8(in=in,load=ram8h,address=address[3..5],out=ram8outh);
    Mux8Way16(a=ram8outa,b=ram8outb,c=ram8outc,d=ram8outd,e=ram8oute,f=ram8outf,g=ram8outg,h=ram8outh, sel=address[0..2],out=out);
}