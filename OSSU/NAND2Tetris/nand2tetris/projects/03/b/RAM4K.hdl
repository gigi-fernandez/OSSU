// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[0..2],a=ram512a,b=ram512b,c=ram512c,d=ram512d,e=ram512e,f=ram512f,g=ram512g,h=ram512h);
    RAM512(in=in,load=ram512a,address=address[3..11],out=ram512outa);
    RAM512(in=in,load=ram512b,address=address[3..11],out=ram512outb);
    RAM512(in=in,load=ram512c,address=address[3..11],out=ram512outc);
    RAM512(in=in,load=ram512d,address=address[3..11],out=ram512outd);
    RAM512(in=in,load=ram512e,address=address[3..11],out=ram512oute);
    RAM512(in=in,load=ram512f,address=address[3..11],out=ram512outf);
    RAM512(in=in,load=ram512g,address=address[3..11],out=ram512outg);
    RAM512(in=in,load=ram512h,address=address[3..11],out=ram512outh);
    Mux8Way16(a=ram512outa,b=ram512outb,c=ram512outc,d=ram512outd,e=ram512oute,f=ram512outf,g=ram512outg,h=ram512outh, sel=address[0..2],out=out);
}